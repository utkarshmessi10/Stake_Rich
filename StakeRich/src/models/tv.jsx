/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: AtskaHeart (https://sketchfab.com/atskaheart)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/grandmas-tv-b2310e7e18dc4c11b5758804cfcc7dab
Title: Grandma's TV
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

const TV=(props) =>{
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/grandmas_tv.glb')
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="4f28633cba284702927ddea51ed16d0efbx" rotation={[Math.PI / 2, 0, 0]}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="TV" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                  <mesh
                    name="TV_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="TV_screennoise_1"
                  position={[-23.657, 345.553, -71.591]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={[100.672, 100.672, 95.392]}>
                  <mesh
                    name="TV_screennoise_1_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_screennoise_1_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="TV_glass"
                  position={[-22.71, 343.494, -76.695]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={[97.471, 99.105, 91.587]}>
                  <mesh
                    name="TV_glass_TV_Glass_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_glass_TV_Glass_0.geometry}
                    material={materials.TV_Glass}
                  />
                </group>
                <group name="TV_Table" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                  <mesh
                    name="TV_Table_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_Table_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="RemoteControl"
                  position={[131.383, 253.127, -75.79]}
                  rotation={[-Math.PI / 2, 0, 0.456]}
                  scale={100}>
                  <mesh
                    name="RemoteControl_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.RemoteControl_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group name="VHS_Reader" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                  <mesh
                    name="VHS_Reader_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.VHS_Reader_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="VHS_Reader001"
                  position={[141.656, 257.048, -11.642]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}>
                  <mesh
                    name="VHS_Reader001_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.VHS_Reader001_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="shadows"
                  position={[-31.764, 249.556, 0]}
                  rotation={[-Math.PI / 2, 0, -0.117]}
                  scale={[112.671, 112.671, 100]}>
                  <mesh
                    name="shadows_TV_Shadows_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.shadows_TV_Shadows_0.geometry}
                    material={materials.TV_Shadows}
                  />
                </group>
                <group
                  name="TV_screennoise_2"
                  position={[-23.657, 345.553, -70.688]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={[100.672, 100.672, 95.392]}>
                  <mesh
                    name="TV_screennoise_2_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_screennoise_2_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="TV_screennoise_3"
                  position={[-23.657, 345.553, -68.995]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={[100.672, 100.672, 95.392]}>
                  <mesh
                    name="TV_screennoise_3_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_screennoise_3_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="TV_screenempty"
                  position={[-23.657, 345.553, -72.64]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={[100.672, 100.672, 95.392]}>
                  <mesh
                    name="TV_screenempty_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_screenempty_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="TV_screennosignal"
                  position={[-23.657, 345.553, -68.855]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={[100.672, 100.672, 95.392]}>
                  <mesh
                    name="TV_screennosignal_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_screennosignal_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="TV_screenchannel1"
                  position={[-23.657, 345.553, -68.084]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={[100.672, 100.672, 95.392]}>
                  <mesh
                    name="TV_screenchannel1_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_screenchannel1_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="TV_screenchannel2"
                  position={[-23.657, 345.553, -64.752]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={[100.672, 100.672, 95.392]}>
                  <mesh
                    name="TV_screenchannel2_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_screenchannel2_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group
                  name="TV_standby"
                  position={[29.673, 272.461, -77.34]}
                  rotation={[-Math.PI / 2, 0.021, 0]}
                  scale={118.507}>
                  <mesh
                    name="TV_standby_Tv_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.TV_standby_Tv_0.geometry}
                    material={materials.material}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/grandmas_tv.glb')

export default TV;